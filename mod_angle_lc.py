def mod_angle_lc(filename_fits,filename_12,filename_eff_12,datanumber,Pmin,Pmax,mod_min,mod_max,mod_bin_num,bin_length,lc_name):
    
    
    #DU1+DU2 data
    
    with fits.open(str(filename_12)) as hdu:
        data_12=hdu[1].data  #reading in the file we will use the main data, DU1+DU2
        print('Initial number of data_12 {}'.format(len(data_12)))
    eff_mod_angle_12=np.loadtxt(str(filename_eff_12)) #loading in mod angles of combined DU1+DU2
    
    #any ol observation fits (for header data)
    with fits.open(str(filename_fits)) as hdu2:
        data_header=hdu2[1].header #reading in the file we will use the header of (the header data we need here is the same for all raw fits so any will do)
        
        GTI=[(169402263.0, 169405703.512488), (169405708.193735, 169405928.0), (169408049.0, 169408120.332665), (169408120.471237, 169408208.295056), (169408213.000139, 169408318.32), (169408378.323, 169411714.0), (169413834.0, 169414228.7420001), (169414230.04200006, 169414272.531237), (169414272.571104, 169414498.48), (169414558.48, 169417499.0), (169419620.0, 169419958.62), (169420018.62, 169420050.0), (169420052.62, 169420061.527), (169420064.98, 169420597.0), (169420599.983, 169420601.0), (169420603.0, 169420679.637), (169420682.0, 169420690.543), (169420695.0, 169420708.64), (169420768.64, 169421068.65), (169421128.65, 169421533.79699993), (169421535.09699988, 169421541.604726), (169421541.669245, 169421818.667), (169421878.67, 169423285.0), (169425568.763, 169426168.683), (169426228.78, 169426650.0), (169426653.03, 169426654.0), (169426657.0, 169426749.8369999), (169426751.13700008, 169426756.279274), (169426756.313549, 169426824.370576), (169426830.711964, 169426918.797), (169426978.797, 169429071.0), (169431748.92, 169432348.933), (169432408.937, 169433128.953), (169433188.957, 169434857.0), (169436978.0, 169437179.057), (169437959.077, 169440643.0), (169442764.0, 169443389.213), (169444107.233, 169444108.137), (169444169.233, 169444769.25), (169444829.25, 169445323.9749999), (169445325.2750001, 169445519.267), (169445579.27, 169446429.0), (169448550.0, 169449599.277), (169450349.39, 169450894.826919), (169450902.786284, 169452215.0), (169454336.0, 169455809.433), (169456559.547, 169457159.563), (169457219.563, 169457329.473), (169457333.0, 169457334.473), (169457337.253, 169457381.473), (169457385.0, 169457386.473), (169457390.0, 169457851.06500006), (169457852.365, 169457939.583), (169457999.583, 169458001.0), (169460122.0, 169460488.0), (169460491.481757, 169461414.005146), (169461414.072369, 169462019.687), (169462769.703, 169463787.0), (169465908.0, 169468229.843), (169468979.86, 169469573.0), (169471694.0, 169472383.810444), (169472383.950761, 169473247.470367), (169473253.654601, 169473872.834047), (169473873.01679, 169474440.0), (169475160.017, 169475359.0), (169477480.0, 169480323.560135), (169480323.638249, 169480647.157), (169483266.0, 169484839.362372), (169484845.818273, 169486830.313), (169489051.0, 169492716.0), (169494837.0, 169495140.523), (169495200.523, 169495767.945608), (169495773.598179, 169496928.945826), (169497182.409367, 169498502.0), (169500660.663, 169501350.68), (169501410.68, 169504288.0), (169506409.0, 169506561.792343), (169513633.369607, 169513770.997), (169513830.997, 169514900.0), (169514903.685173, 169515860.0), (169518601.12, 169519201.133), (169519261.137, 169519663.52900004), (169519664.829, 169519739.551417), (169519739.682221, 169519951.153), (169520011.153, 169521645.0), (169523767.0, 169524031.257), (169524781.277, 169527431.0), (169529553.0, 169530241.413), (169530991.433, 169531591.45), (169531651.45, 169532159.6229999), (169532160.9230001, 169532371.47), (169532431.47, 169533055.0), (169533057.91383, 169533217.0), (169535339.0, 169536396.76305), (169536396.905443, 169536451.57), (169537140.59, 169537141.497), (169537201.59, 169539003.0), (169541124.0, 169542661.73), (169543381.747, 169544011.763), (169544071.763, 169544131.45129), (169544136.769236, 169544139.67), (169544143.0, 169544197.0), (169544199.767, 169544202.0), (169544286.917, 169544672.71600008), (169544674.01600003, 169544761.783), (169546910.0, 169547630.567274), (169547634.943411, 169548868.652133), (169549591.903, 169550341.7579999), (169550343.0580001, 169550575.0), (169552696.0, 169552918.641118), (169552924.316563, 169554081.932868), (169554082.17333, 169555052.043), (169555802.063, 169556361.0), (169558482.0, 169559652.273943), (169559657.36877, 169561262.2), (169561951.217, 169561952.123), (169562012.22, 169562147.0), (169564268.0, 169564968.315737), (169564968.541417, 169567249.017395), (169567249.274049, 169567472.26), (169570054.0, 169573424.543795), (169573424.804023, 169573652.513), (169575842.57, 169576521.579138), (169576526.659403, 169576983.091639), (169576987.763453, 169577980.403134), (169577986.435245, 169579212.0), (169579216.0, 169579504.0), (169581625.0, 169581991.0), (169582052.727, 169582859.584748), (169595385.962115, 169595511.0), (169595553.07, 169596862.0), (169599213.163, 169599813.18), (169599873.18, 169600154.982351), (169600161.515907, 169600299.0), (169600304.0, 169600379.14499998), (169600380.44499993, 169600593.2), (169600653.2, 169601206.992947), (169601207.111154, 169602412.692608), (169602412.819768, 169602647.0), (169605423.323, 169606023.337), (169606083.34, 169606490.194), (169606491.49399996, 169606590.284267), (169606590.427063, 169606803.357), (169606863.36, 169608433.0), (169610555.0, 169610853.46), (169611633.48, 169614219.0), (169616341.0, 169616761.344285), (169616767.066489, 169617063.62), (169617813.64, 169618438.653), (169618445.0, 169618773.0), (169618778.0, 169618995.2909999), (169618996.59100008, 169619000.340993), (169619000.412711, 169619193.673), (169619253.673, 169619658.957603), (169619663.63883, 169620005.0), (169622127.0, 169623273.777), (169624023.797, 169625791.0), (169641191.03246, 169641904.25), (169642624.267, 169643149.0), (169645270.0, 169648084.407), (169648834.427, 169648934.0), (169651357.719319, 169651379.031241), (169651385.518603, 169651390.265149), (169651428.375901, 169653010.0), (169653012.0, 169653023.0), (169653025.0, 169653060.0), (169653064.0, 169653078.0), (169653080.0, 169653084.0), (169653086.0, 169653261.0), (169653263.0, 169653302.0), (169653304.0, 169653321.0), (169653323.0, 169653364.0), (169653366.0, 169653451.0), (169653453.0, 169653462.0), (169653464.0, 169653470.0), (169653472.0, 169653476.0), (169653480.0, 169653484.0), (169653486.0, 169653491.0), (169653493.0, 169653496.0), (169653498.0, 169653519.0), (169653521.0, 169653530.0), (169653532.0, 169653534.0), (169653536.0, 169653548.0), (169653550.0, 169653555.0), (169653557.0, 169653560.0), (169653562.0, 169653573.0), (169653575.0, 169653598.0), (169653600.0, 169653604.0), (169653606.0, 169653608.0), (169653610.0, 169653624.0), (169653626.0, 169653654.0), (169653656.0, 169653660.0), (169653662.0, 169653754.0), (169653756.0, 169653757.0), (169653761.0, 169653772.0), (169653774.0, 169653813.0), (169653817.0, 169653820.0), (169653822.0, 169653824.0), (169653826.0, 169653828.0), (169653830.0, 169653847.0), (169653849.0, 169653852.0), (169653854.0, 169653869.0), (169653871.0, 169653880.0), (169653882.0, 169653884.0), (169653886.0, 169653888.0), (169653890.0, 169653897.0), (169653899.0, 169653918.0), (169653920.0, 169653940.0), (169653942.0, 169653944.0), (169653946.0, 169653948.0), (169653950.0, 169653955.0), (169653957.0, 169654294.563), (169656842.0, 169659250.5999999), (169659253.797993, 169660504.723), (169662627.0, 169666292.0), (169668413.0, 169668814.933), (169668874.937, 169669754.455107), (169669761.307517, 169671818.069277), (169679985.0, 169680455.23), (169680470.0, 169680994.0), (169680995.97, 169681024.0), (169681025.97, 169681028.0), (169681029.97, 169681082.0), (169681083.97, 169681087.0), (169681088.97, 169681115.0), (169681116.97, 169681160.0), (169681162.97, 169681168.153), (169681171.0, 169681232.25), (169681235.0, 169683649.0), (169686065.373, 169686635.39), (169686695.39, 169687123.0), (169687129.0, 169687194.8269999), (169687196.1270001, 169687415.41), (169687475.41, 169688776.0), (169688780.0, 169689435.0), (169692245.533, 169692845.547), (169692905.55, 169693316.8770001), (169693318.17700005, 169693625.567), (169693685.57, 169695221.0), (169697342.0, 169697705.577), (169698455.69, 169699071.0), (169699073.0, 169699474.92600012), (169699535.72, 169699846.0), (169699849.12, 169699964.137286), (169699964.251522, 169701007.0), (169703128.0, 169703915.78), (169704665.85, 169706756.078681), (169706761.505473, 169706793.0), (169708914.0, 169709001.417009), (169709001.491343, 169710124.937), (169710846.007, 169712579.0), (169714700.0, 169715141.3113), (169715145.232823, 169715193.587144), (169715193.622754, 169715579.721837), (169715583.093153, 169715887.704621), (169715891.878414, 169716333.147), (169717056.167, 169717682.0), (169717689.263, 169717746.0), (169717751.0, 169717818.0), (169717821.263, 169717824.0), (169717827.0, 169717874.0), (169717879.263, 169718364.0), (169720486.0, 169720936.0), (169720941.0, 169722516.303), (169723266.323, 169724150.0), (169726272.0, 169728713.023007), (169728716.576945, 169728726.367), (169729476.48, 169729936.0), (169732057.0, 169733190.98786), (169733474.270775, 169733484.0866), (169733484.123304, 169734936.62), (169735686.64, 169735722.0), (169737843.0, 169741116.777), (169743629.0, 169746965.249019), (169751353.189569, 169751611.8884), (169751611.924595, 169753079.0), (169755200.0, 169755637.147), (169755697.15, 169758175.908106), (169758181.440323, 169758865.0), (169760986.0, 169761097.287), (169761157.287, 169761326.0), (169761329.61, 169761331.0), (169761333.0, 169761861.0), (169761864.613, 169762194.0), (169762196.0, 169762206.0), (169762208.0, 169762696.42799997), (169762697.72799993, 169762972.0), (169767337.447, 169767505.4690001), (169767506.76900005, 169767838.0), (169767841.0, 169767843.0), (169767846.0, 169767888.0), (169767891.667, 169767893.0), (169767895.667, 169767958.0), (169767961.367, 169767963.367), (169767966.667, 169768027.467), (169768087.467, 169770436.0), (169772887.59, 169773487.607), (169773547.607, 169773947.0), (169773952.717, 169773959.975066), (169773964.446328, 169774011.52399993), (169774012.82399988, 169774267.627), (169774327.627, 169774601.421522), (169774605.307099, 169776222.0), (169779035.75, 169779036.653), (169779097.75, 169779697.763), (169779757.767, 169780140.57399988), (169780141.875, 169780477.783), (169780537.787, 169782008.0), (169784129.0, 169784527.89), (169785277.907, 169785677.524745), (169785682.712857, 169787794.0), (169789915.0, 169790031.439212), (169790031.604236, 169790738.047), (169791488.067, 169792088.083), (169792148.083, 169792332.167656), (169792336.372255, 169792423.997), (169792427.0, 169792427.09), (169792430.0, 169792868.1), (169792928.103, 169793580.0), (169795701.0, 169795975.964391), (169795976.02066, 169796948.11), (169797698.223, 169799366.0), (169801487.0, 169803158.363), (169803860.287, 169804516.4), (169804519.0, 169804541.303), (169804546.963, 169804547.303), (169804553.0, 169804597.0), (169804598.963, 169804718.0), (169804719.977, 169805124.77399993), (169805126.07399988, 169805151.0), (169807273.0, 169807330.654286), (169807335.40273, 169809368.43), (169810088.54, 169810937.0), (169813059.0, 169813681.368827), (169813994.479807, 169814004.087464), (169814008.718678, 169815577.63), (169816298.7, 169816723.0), (169818845.0, 169821758.837), (169822508.857, 169822509.0), (169824630.0, 169827887.965849), (169827892.004198, 169827968.903), (169830416.0, 169832598.412697), (169832603.795778, 169834080.0), (169836202.0, 169836286.0), (169836289.22, 169838851.869716), (169838851.928716, 169839430.819732), (169839433.737699, 169839866.0), (169841987.0, 169842151.07599998), (169842152.37599993, 169842486.273), (169842549.37, 169845155.862854), (169853559.0, 169854022.214747), (169854022.27136, 169854129.67), (169854189.67, 169854652.0), (169854655.377, 169854656.587), (169854660.0, 169854698.0), (169854703.587, 169854705.0), (169854707.0, 169854760.59), (169854766.377, 169854826.18400002), (169854827.48399997, 169854879.69), (169854939.69, 169857223.0), (169859709.813, 169860309.827), (169860369.83, 169860832.23600006), (169860833.536, 169861089.847), (169861149.85, 169861279.845278), (169861286.289086, 169863009.0), (169865130.0, 169865169.953), (169865919.973, 169866138.607307), (169866144.473713, 169866422.728976), (169866428.34788, 169866519.99), (169866579.99, 169866966.28699994), (169866967.5869999, 169867300.007), (169867360.01, 169868795.0), (169870916.0, 169871379.113), (169872130.133, 169872274.08328), (169872279.734843, 169872730.147), (169872790.15, 169873127.339), (169873128.63899994, 169873510.167), (169873570.17, 169874581.0), (169876702.0, 169877376.983275), (169877381.508085, 169877588.22), (169878310.29, 169878445.182499), (169878450.45017, 169878939.0), (169879000.307, 169879249.0), (169879254.0, 169879289.3900001), (169879290.69000006, 169879322.298834), (169879327.819881, 169879690.327), (169879750.327, 169880366.0), (169882488.0, 169883770.43), (169884520.45, 169885402.475301), (169888574.576905, 169888737.748539), (169888742.718755, 169889392.497001), (169902081.893794, 169902400.91), (169903120.927, 169903510.0), (169905631.0, 169908581.067), (169911417.0, 169913397.825173), (169913403.39435, 169913778.0), (169913781.0, 169914791.227), (169917202.0, 169920357.21593), (169920362.411701, 169920867.0), (169922988.0, 169923117.347), (169923120.0, 169926311.523), (169926371.523, 169926652.0)]                       
        #gti=hdu2[2].data
        print(len(GTI))
        #gti=[(169402263,169405703)]
        #gti=data_h['gti']
        
        
        
        # r cut index
        r_sqrd=abs((data_12.field('X')-x_0)**2-(data_12.field('Y')-y_0)**2)    #r cut just like before now i is each mod angle select fits file
        r_0=30.769326 
        index_r=[j<r_0 for j in r_sqrd]
        data_12=data_12[index_r] #indexing photon dataset
       
        eff_mod_angle_12=eff_mod_angle_12[index_r] #indexing mod angle dataset
  

        #PI channel/energy index
        index_energy=list(locate(data_12.field('PI'), lambda x: Pmin < x < Pmax))  #energy cut just like before
        data_12=data_12[index_energy]
        eff_mod_angle_12=eff_mod_angle_12[index_energy]


    
        mod_min_global=mod_min
        mod_max_global=mod_max

        a=np.linspace(mod_min_global,mod_max_global,mod_bin_num+1) #defining even space between min and max for (mod_bin_num) list
        #addition from last version of function: plus one on bin num so its actually then 
        
        mod_angle_list=[(a[i-1],a[i]) for i in range(len(a))]  #making a list of mod angle bins to select over
        mod_angle_list.pop(0) #removing the dodger first one
             
        
        #for each [min,max] in the mod angle list, only the the angles between these vals are selected and the same index is applied to the data
        
        for i in mod_angle_list:
            mod_min=i[0] #defining lhs bin edge
            mod_max=i[1] #defining rhs bin edge
            index_mod_angle=[mod_min<=k<=mod_max for k in eff_mod_angle_12] #define the index over mod angle
            #index_mod_angle_nodouble=[mod_min<=k<mod_max for k in eff_mod_angle_12]
        
            #data_bin_nodouble=data_12[index_mod_angle_nodouble]
            #print(len(data_bin_nodouble))
            data_bin=data_12[index_mod_angle] #selecting/indexing the photons that meet the criteria of this mod angle range             
            #print(len(data_bin))
            
           # data_header=data_header[index_r]
           # data_header=data_header[index_energy]
           # data_header=data_header[index_mod_angle]
            #The below commented was used for plotting purposes only
            #Whats actually saved is the iteration of fits files that the mod angle lc lightcurves will be made from in the cross spec func
            
            
            
            
            
            TIME=data_bin.field('TIME') 
            #print(TIME[:10])
            #print(len(TIME))
            TSTART=data_header['TSTART']
            TSTOP=data_header['TSTOP']
            TIME_days=TIME/(24*60*60)
            MJDREFF=data_header['MJDREFF']   #defining the fits header data from the raw fits file (since our combined cyg12 data doesnt have a header i dont think
            MJDREFI=data_header['MJDREFI']
            MJD_ref_day=MJDREFF+MJDREFI
            curve_duration=TSTOP-TSTART
            #ENERGY=['PI']               
            #lc_nogti=Lightcurve.make_lightcurve(TIME,dt=bin_length,tseg=curve_duration,tstart=TSTART,mjdref=MJD_ref_day) 
            
            #lc_nogti.write('Lightcurves/lc_nogti.fits')
            #print(len(lc_nogti))
            lc=Lightcurve.make_lightcurve(TIME,dt=bin_length,tseg=curve_duration,tstart=TSTART,mjdref=MJD_ref_day,gti=list(GTI)) #making a lightcurve of cut data 
            lcn=lc.n
            lc_new=lc.apply_gtis()
            #print(lc.n)
            #print(lc_new.n)
            time_shift = -TSTART
            #print(type(lc_new))
            lc_shifted = lc_new.shift(time_shift) #shifting it to start at time 0
            #print(lc_shifted.n)
            #plt.figure()
            #plt.plot(lc_shifted.time/(24*60*60),lc_shifted.counts,'.')  #plotting the lightcurve
            #plt.xlabel('Time (Days since observation beginning)')
            #plt.ylabel('Counts')
            #print('lc') #just to see its still running
            #print('There were {} data point before implementing the GTIs and {} now.'.format(lcn, lc_shifted.n))
            #plt.show()

            
            
            #The personalising piece that characterises the whole dataset is the lc_name  -make it the date of creation or any other special thing
            #The first part ie lc name will be/needs to be the same for the crosscode and then will iterate over the mod min/max vals as it goes
            #through the mod angle list
            
            fits.writeto('Lightcurves/lc'+str(lc_name)+'_'+str(datanumber)+'_'+str(Pmin)+'_'+str(Pmax)+'_'+str(mod_min)+'_'+str(mod_max)+'_'+str(bin_length)+'.fits',data_bin,overwrite=True)
            
            
            